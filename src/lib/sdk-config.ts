
import UniversalSDK from './sdk';

// SDK Configuration
const sdkConfig = {
  owner: import.meta.env.VITE_GITHUB_OWNER || '',
  repo: import.meta.env.VITE_GITHUB_REPO || '',
  token: import.meta.env.VITE_GITHUB_TOKEN || '',
  branch: 'main',
  basePath: 'db',
  mediaPath: 'media',
  cloudinary: {
    uploadPreset: import.meta.env.VITE_CLOUDINARY_UPLOAD_PRESET || '',
    cloudName: import.meta.env.VITE_CLOUDINARY_CLOUD_NAME || '',
    apiKey: import.meta.env.VITE_CLOUDINARY_API_KEY || '',
    apiSecret: import.meta.env.VITE_CLOUDINARY_API_SECRET || '',
  },
  smtp: {
    endpoint: '',
    from: 'no-reply@schoolportal.top',
  },
  templates: {
    otp: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2>Your OTP Code</h2>
        <p>Your verification code is: <strong style="font-size: 24px; color: #4f46e5;">{{otp}}</strong></p>
        <p>This code will expire in 10 minutes.</p>
        <p>If you didn't request this code, please ignore this email.</p>
      </div>
    `,
    welcome: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2>Welcome to SchoolPortal!</h2>
        <p>Thank you for joining our platform. Your school management journey starts here.</p>
        <p>Best regards,<br>The SchoolPortal Team</p>
      </div>
    `,
  },
  schemas: {
    users: {
      required: ['email'],
      types: {
        email: 'string',
        password: 'string',
        firstName: 'string',
        lastName: 'string',
        phone: 'string',
        avatar: 'string',
        verified: 'boolean',
        roles: 'array',
        permissions: 'array',
        schoolId: 'string',
        userType: 'string',
        status: 'string',
        dateOfBirth: 'string',
        address: 'string',
        parentId: 'string',
        studentClass: 'string',
        subjects: 'array',
        emergencyContact: 'object',
      },
      defaults: {
        verified: true,
        roles: [],
        permissions: [],
        status: 'active',
      },
    },
    schools: {
      required: ['name', 'slug', 'ownerId'],
      types: {
        name: 'string',
        slug: 'string',
        ownerId: 'string',
        logo: 'string',
        favicon: 'string',
        address: 'string',
        phone: 'string',
        email: 'string',
        website: 'string',
        timezone: 'string',
        currency: 'string',
        status: 'string',
        subscriptionPlan: 'string',
        subscriptionStatus: 'string',
        onboardingCompleted: 'boolean',
        customDomain: 'string',
        branding: 'object',
        establishedYear: 'number',
        totalStudents: 'number',
        totalTeachers: 'number',
        gradeRanges: 'array',
        facilities: 'array',
        accreditations: 'array',
      },
      defaults: {
        status: 'active',
        subscriptionPlan: 'standard',
        subscriptionStatus: 'trial',
        timezone: 'UTC',
        currency: 'USD',
        onboardingCompleted: false,
        totalStudents: 0,
        totalTeachers: 0,
        gradeRanges: [],
        facilities: [],
        accreditations: [],
      },
    },
    pages: {
      required: ['title', 'slug', 'schoolId'],
      types: {
        title: 'string',
        slug: 'string',
        schoolId: 'string',
        type: 'string',
        status: 'string',
        sections: 'array',
        seoTitle: 'string',
        seoDescription: 'string',
        featuredImage: 'string',
        publishedAt: 'string',
        authorId: 'string',
        lastModified: 'string',
        template: 'string',
        customCSS: 'string',
        customJS: 'string',
      },
      defaults: {
        status: 'published',
        sections: [],
      },
    },
    programs: {
      required: ['name', 'schoolId'],
      types: {
        name: 'string',
        slug: 'string',
        description: 'string',
        schoolId: 'string',
        type: 'string',
        duration: 'string',
        fee: 'number',
        capacity: 'number',
        enrolled: 'number',
        status: 'string',
        featuredImage: 'string',
        curriculum: 'string',
        prerequisites: 'array',
        objectives: 'array',
        schedule: 'object',
        teacherId: 'string',
        startDate: 'string',
        endDate: 'string',
        ageRange: 'string',
        certificationType: 'string',
      },
      defaults: {
        type: 'academic',
        fee: 0,
        capacity: 30,
        enrolled: 0,
        status: 'active',
        prerequisites: [],
        objectives: [],
      },
    },
    classes: {
      required: ['name', 'schoolId'],
      types: {
        name: 'string',
        slug: 'string',
        description: 'string',
        schoolId: 'string',
        teacherId: 'string',
        programId: 'string',
        schedule: 'object',
        capacity: 'number',
        enrolled: 'number',
        fee: 'number',
        status: 'string',
        room: 'string',
        gradeLevel: 'string',
        subject: 'string',
        students: 'array',
        materials: 'array',
        assignments: 'array',
        attendance: 'array',
      },
      defaults: {
        capacity: 30,
        enrolled: 0,
        status: 'active',
        students: [],
        materials: [],
        assignments: [],
        attendance: [],
      },
    },
    admissions: {
      required: ['studentName', 'email', 'schoolId'],
      types: {
        studentName: 'string',
        email: 'string',
        phone: 'string',
        parentName: 'string',
        parentEmail: 'string',
        parentPhone: 'string',
        schoolId: 'string',
        programId: 'string',
        grade: 'string',
        previousSchool: 'string',
        documents: 'array',
        status: 'string',
        notes: 'string',
        submittedAt: 'string',
        reviewedAt: 'string',
        reviewedBy: 'string',
        dateOfBirth: 'string',
        address: 'string',
        medicalInfo: 'string',
        emergencyContact: 'object',
        academicRecords: 'array',
        extracurriculars: 'array',
        interviewDate: 'string',
        interviewNotes: 'string',
        testScores: 'object',
        financialAid: 'boolean',
        tuitionPlan: 'string',
      },
      defaults: {
        status: 'pending',
        documents: [],
        academicRecords: [],
        extracurriculars: [],
        financialAid: false,
      },
    },
    blog_posts: {
      required: ['title', 'content', 'schoolId'],
      types: {
        title: 'string',
        slug: 'string',
        content: 'string',
        excerpt: 'string',
        schoolId: 'string',
        authorId: 'string',
        status: 'string',
        featuredImage: 'string',
        publishedAt: 'string',
        tags: 'array',
        categories: 'array',
        readingTime: 'number',
        views: 'number',
        likes: 'number',
        comments: 'array',
        relatedPosts: 'array',
        seoTitle: 'string',
        seoDescription: 'string',
      },
      defaults: {
        status: 'draft',
        tags: [],
        categories: [],
        views: 0,
        likes: 0,
        comments: [],
        relatedPosts: [],
      },
    },
    events: {
      required: ['title', 'date', 'schoolId'],
      types: {
        title: 'string',
        slug: 'string',
        description: 'string',
        date: 'string',
        startTime: 'string',
        endTime: 'string',
        location: 'string',
        schoolId: 'string',
        type: 'string',
        rsvpRequired: 'boolean',
        maxAttendees: 'number',
        currentAttendees: 'number',
        featuredImage: 'string',
        status: 'string',
        organizerId: 'string',
        ticketPrice: 'number',
        registrationDeadline: 'string',
        attendees: 'array',
        agenda: 'array',
        speakers: 'array',
        sponsors: 'array',
        virtualLink: 'string',
        isVirtual: 'boolean',
        recordingUrl: 'string',
      },
      defaults: {
        type: 'general',
        rsvpRequired: false,
        maxAttendees: 0,
        currentAttendees: 0,
        status: 'published',
        ticketPrice: 0,
        attendees: [],
        agenda: [],
        speakers: [],
        sponsors: [],
        isVirtual: false,
      },
    },
    announcements: {
      required: ['title', 'content', 'schoolId'],
      types: {
        title: 'string',
        content: 'string',
        schoolId: 'string',
        authorId: 'string',
        priority: 'string',
        targetAudience: 'array',
        status: 'string',
        publishedAt: 'string',
        expiresAt: 'string',
        category: 'string',
        attachments: 'array',
        readBy: 'array',
        pinned: 'boolean',
        sendEmail: 'boolean',
        sendSMS: 'boolean',
        views: 'number',
      },
      defaults: {
        priority: 'normal',
        targetAudience: ['all'],
        status: 'published',
        attachments: [],
        readBy: [],
        pinned: false,
        sendEmail: false,
        sendSMS: false,
        views: 0,
      },
    },
    gallery: {
      required: ['title', 'schoolId'],
      types: {
        title: 'string',
        slug: 'string',
        description: 'string',
        schoolId: 'string',
        images: 'array',
        category: 'string',
        featured: 'boolean',
        tags: 'array',
        date: 'string',
        photographer: 'string',
        event: 'string',
        visibility: 'string',
        downloads: 'number',
        likes: 'number',
      },
      defaults: {
        images: [],
        featured: false,
        tags: [],
        visibility: 'public',
        downloads: 0,
        likes: 0,
      },
    },
    faqs: {
      required: ['question', 'answer', 'schoolId'],
      types: {
        question: 'string',
        answer: 'string',
        schoolId: 'string',
        category: 'string',
        order: 'number',
        status: 'string',
        authorId: 'string',
        helpful: 'number',
        notHelpful: 'number',
        tags: 'array',
        relatedFaqs: 'array',
        lastUpdated: 'string',
      },
      defaults: {
        status: 'published',
        order: 0,
        helpful: 0,
        notHelpful: 0,
        tags: [],
        relatedFaqs: [],
      },
    },
    staff: {
      required: ['name', 'email', 'schoolId'],
      types: {
        name: 'string',
        email: 'string',
        phone: 'string',
        schoolId: 'string',
        position: 'string',
        department: 'string',
        bio: 'string',
        photo: 'string',
        qualifications: 'array',
        experience: 'number',
        subjects: 'array',
        schedule: 'object',
        status: 'string',
        hireDate: 'string',
        salary: 'number',
        userId: 'string',
      },
      defaults: {
        status: 'active',
        qualifications: [],
        subjects: [],
        experience: 0,
      },
    },
    students: {
      required: ['name', 'email', 'schoolId'],
      types: {
        name: 'string',
        email: 'string',
        phone: 'string',
        schoolId: 'string',
        studentId: 'string',
        grade: 'string',
        class: 'string',
        dateOfBirth: 'string',
        address: 'string',
        parentId: 'string',
        photo: 'string',
        status: 'string',
        enrollmentDate: 'string',
        graduationDate: 'string',
        gpa: 'number',
        attendance: 'object',
        medicalInfo: 'string',
        emergencyContact: 'object',
        userId: 'string',
      },
      defaults: {
        status: 'active',
        gpa: 0,
      },
    },
    assignments: {
      required: ['title', 'classId', 'schoolId'],
      types: {
        title: 'string',
        description: 'string',
        classId: 'string',
        schoolId: 'string',
        teacherId: 'string',
        dueDate: 'string',
        totalPoints: 'number',
        type: 'string',
        status: 'string',
        instructions: 'string',
        attachments: 'array',
        submissions: 'array',
        rubric: 'object',
      },
      defaults: {
        totalPoints: 100,
        type: 'homework',
        status: 'active',
        attachments: [],
        submissions: [],
      },
    },
    grades: {
      required: ['studentId', 'assignmentId', 'schoolId'],
      types: {
        studentId: 'string',
        assignmentId: 'string',
        classId: 'string',
        schoolId: 'string',
        teacherId: 'string',
        points: 'number',
        maxPoints: 'number',
        letterGrade: 'string',
        comments: 'string',
        gradedAt: 'string',
        submittedAt: 'string',
        status: 'string',
      },
      defaults: {
        points: 0,
        status: 'pending',
      },
    },
  },
  auth: {
    requireEmailVerification: false,
    otpTriggers: [],
  },
};

// Initialize SDK instance
export const sdk = new UniversalSDK(sdkConfig);

// Initialize SDK on app start
sdk.init().catch(console.error);

export default sdk;
